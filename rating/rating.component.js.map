{"version":3,"sources":["../../src/rating/rating.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,YAAA,EAAc,KAAA,EAAe,MAAA,EAAQ,UAAA,EAAW,MAAO,eAAA,CAAgB;AACzG,OAAO,EAAwB,iBAAA,EAAkB,MAAO,gBAAA,CAAiB;AAEzE,MAAM,CAAC,IAAM,6BAAA,GAAqC;IAChD,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,eAAA,EAAA,CAAA,CAAgB;IAC9C,KAAK,EAAE,IAAA;CACR,CAAC;AAGF;IAAA;QACE,sBAAsB;QACd,QAAG,GAAW,CAAC,CAAC;QAWxB,wEAAwE;QAChE,YAAO,GAAyB,IAAI,YAAY,EAAE,CAAC;QAC3D,8EAA8E;QACtE,YAAO,GAAyB,IAAI,YAAY,EAAE,CAAC;QAEpD,aAAQ,GAAQ,QAAQ,CAAC,SAAS,CAAC;QACnC,cAAS,GAAQ,QAAQ,CAAC,SAAS,CAAC;IAkH7C,CAAC;IA3GQ,mCAAS,GAAhB,UAAiB,KAAU;QACzB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC;QACT,CAAC;QAED,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,kCAAQ,GAAf;QACE,IAAI,CAAC,GAAG,GAAG,OAAO,IAAI,CAAC,GAAG,KAAK,WAAW,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW;cAC9C,IAAI,CAAC,OAAO;cACZ,gBAAgB,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW;cAChD,IAAI,CAAC,QAAQ;cACb,sBAAsB,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;cACtE,IAAI,CAAC,MAAM;cACX,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACtE,CAAC;IAED,gBAAgB;IACT,oCAAU,GAAjB,UAAkB,KAAa;QAC7B,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,+BAAK,GAAZ,UAAa,KAAa;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAEM,+BAAK,GAAZ;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,0CAAgB,GAAvB,UAAwB,EAAkB;QACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,2CAAiB,GAAxB,UAAyB,EAAY;QACnC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAEM,8BAAI,GAAX,UAAY,KAAa;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAES,8CAAoB,GAA9B,UAA+B,YAAmB,EAAE,GAAW;QAC7D,YAAY,GAAG,YAAY,IAAI,EAAE,CAAC;QAClC,IAAI,KAAK,GAAG,YAAY,CAAC,MAAM,IAAI,GAAG,CAAC;QACvC,IAAI,MAAM,GAAU,EAAE,CAAC;QACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACxB,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;aAC/B,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IA6BH,sBAAC;AAAD,CArIA,AAqIC;;AA5BM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,siBAOT;gBACD,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,8BAAc,GAA2C;IAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;CACtE,CAAC","file":"rating.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, HostListener, Input, OnInit, Output, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const RATING_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => RatingComponent),\r\n  multi: true\r\n};\r\n\r\n\r\nexport class RatingComponent implements ControlValueAccessor, OnInit {\r\n  /** number of icons */\r\n   public max: number = 5;\r\n  /** selected icon class */\r\n   public stateOn: string;\r\n  /** unselected icon class */\r\n   public stateOff: string;\r\n  /** if true will not react on any user events */\r\n   public readonly: boolean;\r\n  /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\r\n   public titles: string[];\r\n  /** array of custom icons classes */\r\n   public ratingStates: { stateOn: string, stateOff: string }[];\r\n  /** fired when icon selected, $event:number equals to selected rating */\r\n   public onHover: EventEmitter<number> = new EventEmitter();\r\n  /** fired when icon selected, $event:number equals to previous rating value */\r\n   public onLeave: EventEmitter<number> = new EventEmitter();\r\n\r\n  public onChange: any = Function.prototype;\r\n  public onTouched: any = Function.prototype;\r\n\r\n  public range: any[];\r\n  public value: number;\r\n  protected preValue: number;\r\n\r\n  \r\n  public onKeydown(event: any): void {\r\n    if ([37, 38, 39, 40].indexOf(event.which) === -1) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    let sign = event.which === 38 || event.which === 39 ? 1 : -1;\r\n    this.rate(this.value + sign);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.max = typeof this.max !== 'undefined' ? this.max : 5;\r\n    this.readonly = this.readonly === true;\r\n    this.stateOn = typeof this.stateOn !== 'undefined'\r\n      ? this.stateOn\r\n      : 'glyphicon-star';\r\n    this.stateOff = typeof this.stateOff !== 'undefined'\r\n      ? this.stateOff\r\n      : 'glyphicon-star-empty';\r\n    this.titles = typeof this.titles !== 'undefined' && this.titles.length > 0\r\n      ? this.titles\r\n      : ['one', 'two', 'three', 'four', 'five'];\r\n    this.range = this.buildTemplateObjects(this.ratingStates, this.max);\r\n  }\r\n\r\n  // model -> view\r\n  public writeValue(value: number): void {\r\n    if (value % 1 !== value) {\r\n      this.value = Math.round(value);\r\n      this.preValue = value;\r\n      return;\r\n    }\r\n\r\n    this.preValue = value;\r\n    this.value = value;\r\n  }\r\n\r\n  public enter(value: number): void {\r\n    if (!this.readonly) {\r\n      this.value = value;\r\n      this.onHover.emit(value);\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.value = this.preValue;\r\n    this.onLeave.emit(this.value);\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => {}): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public rate(value: number): void {\r\n    if (!this.readonly && value >= 0 && value <= this.range.length) {\r\n      this.writeValue(value);\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  protected buildTemplateObjects(ratingStates: any[], max: number): any[] {\r\n    ratingStates = ratingStates || [];\r\n    let count = ratingStates.length || max;\r\n    let result: any[] = [];\r\n    for (let i = 0; i < count; i++) {\r\n      result.push(Object.assign({\r\n        index: i,\r\n        stateOn: this.stateOn,\r\n        stateOff: this.stateOff,\r\n        title: this.titles[i] || i + 1\r\n      }, ratingStates[i] || {}));\r\n    }\r\n    return result;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'rating',\r\n  template: `\r\n    <span (mouseleave)=\"reset()\" (keydown)=\"onKeydown($event)\" tabindex=\"0\" role=\"slider\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"range.length\" [attr.aria-valuenow]=\"value\">\r\n      <ng-template ngFor let-r [ngForOf]=\"range\" let-index=\"index\">\r\n        <span class=\"sr-only\">({{ index < value ? '*' : ' ' }})</span>\r\n        <i (mouseenter)=\"enter(index + 1)\" (click)=\"rate(index + 1)\" class=\"glyphicon\" [ngClass]=\"index < value ? r.stateOn : r.stateOff\" [title]=\"r.title\" ></i>\r\n      </ng-template>\r\n    </span>\r\n  `,\r\n  providers: [RATING_CONTROL_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'max': [{ type: Input },],\n'stateOn': [{ type: Input },],\n'stateOff': [{ type: Input },],\n'readonly': [{ type: Input },],\n'titles': [{ type: Input },],\n'ratingStates': [{ type: Input },],\n'onHover': [{ type: Output },],\n'onLeave': [{ type: Output },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}