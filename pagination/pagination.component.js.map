{"version":3,"sources":["../../src/pagination/pagination.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,UAAA,EAAY,YAAA,EAAc,KAAA,EAAe,MAAA,EAAQ,QAAA,EAAgB,UAAA,EAC7E,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAwB,iBAAA,EAAkB,MAAO,gBAAA,CAAiB;AAEzE,OAAO,EAAE,gBAAA,EAAiB,MAAO,qBAAA,CAAsB;AAOvD,MAAM,CAAC,IAAM,iCAAA,GAAyC;IACpD,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,mBAAA,EAAA,CAAA,CAAoB;IAClD,KAAK,EAAE,IAAA;CACR,CAAC;AAEF,IAAM,mBAAA,GAAsB,41CA+BzB,CAAC;AAGJ;IAkGE,6BAAmB,QAAiB,EAAE,UAAqB,EAAE,gBAAkC;QAtE/F,sFAAsF;QAC9E,aAAQ,GAAwB,IAAI,YAAY,EAAU,CAAC;QACnE,qIAAqI;QAC7H,gBAAW,GAAkC,IAAI,YAAY,EAAoB,CAAC;QAsDnF,aAAQ,GAAO,QAAQ,CAAC,SAAS,CAAC;QAClC,cAAS,GAAO,QAAQ,CAAC,SAAS,CAAC;QAShC,WAAM,GAAW,KAAK,CAAC;QACvB,UAAK,GAAU,CAAC,CAAC;QAGzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IArED,sBAAW,6CAAY;QAFvB,gGAAgG;aAEhG;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAwB,CAAQ;YAC9B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/C,CAAC;;;OALA;IASD,sBAAW,2CAAU;QAFrB,yCAAyC;aAEzC;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAsB,CAAQ;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/C,CAAC;;;OALA;IAOD,sBAAW,2CAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAsB,CAAQ;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;;;OARA;IAUD,sBAAW,qCAAI;aAcf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAhBD,UAAgB,KAAY;YAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAExE,EAAE,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,KAAK,IAAI,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC;YACT,CAAC;YAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,YAAY,EAAE,IAAI,CAAC,YAAY;aAChC,CAAC,CAAC;QACL,CAAC;;;OAAA;IA2BM,8CAAgB,GAAvB,UAAwB,MAAW;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAEM,sCAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC1E,oBAAoB;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW;cAC9C,IAAI,CAAC,OAAO;cACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW;cAC5C,IAAI,CAAC,MAAM;cACX,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,OAAO,IAAI,CAAC,aAAa,KAAK,WAAW;cAC1D,IAAI,CAAC,aAAa;cAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW;cAC5D,IAAI,CAAC,cAAc;cACnB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW;cAC1D,IAAI,CAAC,YAAY;cACjB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAE3B,aAAa;QACb,IAAI,CAAC,YAAY,GAAG,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW;cACxD,IAAI,CAAC,YAAY;cACjB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7C,aAAa;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,wCAAU,GAAjB,UAAkB,KAAY;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAEM,qCAAO,GAAd,UAAe,GAAU;QACvB,MAAM,CAAE,IAAY,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;IAClE,CAAC;IAEM,wCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;IACzB,CAAC;IAEM,oCAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IAEM,8CAAgB,GAAvB,UAAwB,EAAgB;QACtC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,+CAAiB,GAAxB,UAAyB,EAAW;QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAEM,wCAAU,GAAjB,UAAkB,IAAW,EAAE,KAAY;QACzC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1B,IAAI,MAAM,GAAO,KAAK,CAAC,MAAM,CAAC;gBAC9B,MAAM,CAAC,IAAI,EAAE,CAAC;YAChB,CAAC;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,sCAAsC;IAC5B,sCAAQ,GAAlB,UAAmB,GAAU,EAAE,IAAW,EAAE,MAAc;QACxD,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,MAAM,EAAC,GAAG,EAAE,MAAM,QAAA,EAAE,CAAC;IACtC,CAAC;IAES,sCAAQ,GAAlB,UAAmB,WAAkB,EAAE,UAAiB;QACtD,IAAI,KAAK,GAAS,EAAE,CAAC;QAErB,sBAAsB;QACtB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,OAAO,GAAG,UAAU,CAAC;QACzB,IAAI,UAAU,GAAG,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;QAElF,uBAAuB;QACvB,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,8DAA8D;gBAC9D,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpE,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBAEvC,8BAA8B;gBAC9B,EAAE,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC;oBACzB,OAAO,GAAG,UAAU,CAAC;oBACrB,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,2CAA2C;gBAC3C,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAE7E,wCAAwC;gBACxC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;QAED,wBAAwB;QACxB,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,SAAS,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC;YAChD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,KAAK,WAAW,CAAC,CAAC;YACnE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC;QAED,sCAAsC;QACtC,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACjE,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACjC,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC;gBACzB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC3D,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,aAAa;IACH,iDAAmB,GAA7B;QACE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC;cAClC,CAAC;cACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IA+BH,0BAAC;AAAD,CAhRA,AAgRC;;AA9BM,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,mBAAmB;gBAC7B,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,kCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAJ6F,CAI7F,CAAC;AACK,kCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAClC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC/B,CAAC","file":"pagination.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer, Self, forwardRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PaginationConfig } from './pagination.config';\r\n\r\nexport interface PageChangedEvent {\r\n  itemsPerPage:number;\r\n  page:number;\r\n}\r\n\r\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => PaginationComponent),\r\n  multi: true\r\n};\r\n\r\nconst PAGINATION_TEMPLATE = `\r\n  <ul class=\"pagination\" [ngClass]=\"classMap\">\r\n    <li class=\"pagination-first page-item\"\r\n        *ngIf=\"boundaryLinks\"\r\n        [class.disabled]=\"noPrevious()||disabled\">\r\n      <a class=\"page-link\" href (click)=\"selectPage(1, $event)\" [innerHTML]=\"getText('first')\"></a>\r\n    </li>\r\n\r\n    <li class=\"pagination-prev page-item\"\r\n        *ngIf=\"directionLinks\"\r\n        [class.disabled]=\"noPrevious()||disabled\">\r\n      <a class=\"page-link\" href (click)=\"selectPage(page - 1, $event)\" [innerHTML]=\"getText('previous')\"></a>\r\n      </li>\r\n\r\n    <li *ngFor=\"let pg of pages\"\r\n        [class.active]=\"pg.active\"\r\n        [class.disabled]=\"disabled&&!pg.active\"\r\n        class=\"pagination-page page-item\">\r\n      <a class=\"page-link\" href (click)=\"selectPage(pg.number, $event)\" [innerHTML]=\"pg.text\"></a>\r\n    </li>\r\n\r\n    <li class=\"pagination-next page-item\"\r\n        *ngIf=\"directionLinks\"\r\n        [class.disabled]=\"noNext()||disabled\">\r\n      <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\" [innerHTML]=\"getText('next')\"></a></li>\r\n\r\n    <li class=\"pagination-last page-item\"\r\n        *ngIf=\"boundaryLinks\"\r\n        [class.disabled]=\"noNext()||disabled\">\r\n      <a class=\"page-link\" href (click)=\"selectPage(totalPages, $event)\" [innerHTML]=\"getText('last')\"></a></li>\r\n  </ul>\r\n  `;\r\n\r\n\r\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\r\n  public config:any;\r\n  /** if `true` aligns each link to the sides of pager */\r\n   public align:boolean;\r\n  /** limit number for page links in pager */\r\n   public maxSize:number;\r\n  /** if false first and last buttons will be hidden */\r\n   public boundaryLinks:boolean;\r\n  /** if false previous and next buttons will be hidden */\r\n   public directionLinks:boolean;\r\n  // labels\r\n  /** first button text */\r\n   public firstText:string;\r\n  /** previous button text */\r\n   public previousText:string;\r\n  /** next button text */\r\n   public nextText:string;\r\n  /** last button text */\r\n   public lastText:string;\r\n  /** if true current page will in the middle of pages list */\r\n   public rotate:boolean;\r\n  // css\r\n  /** add class to <li> */\r\n   public pageBtnClass:string;\r\n\r\n  /** if true pagination component will be disabled */\r\n   public disabled:boolean;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n   public numPages:EventEmitter<number> = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object with current page index and number of items per page */\r\n   public pageChanged:EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  \r\n  public get itemsPerPage():number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  public set itemsPerPage(v:number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  /** total number of items in all pages */\r\n  \r\n  public get totalItems():number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  public set totalItems(v:number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  public get totalPages():number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  public set totalPages(v:number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  public set page(value:number) {\r\n    const _previous = this._page;\r\n    this._page = (value > this.totalPages) ? this.totalPages : (value || 1);\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  public get page():number {\r\n    return this._page;\r\n  }\r\n\r\n  public onChange:any = Function.prototype;\r\n  public onTouched:any = Function.prototype;\r\n  public renderer:Renderer;\r\n  public elementRef:ElementRef;\r\n  public classMap:string;\r\n  public pages:any[];\r\n\r\n  protected _itemsPerPage:number;\r\n  protected _totalItems:number;\r\n  protected _totalPages:number;\r\n  protected inited:boolean = false;\r\n  protected _page:number = 1;\r\n\r\n  public constructor(renderer:Renderer, elementRef:ElementRef, paginationConfig: PaginationConfig) {\r\n    this.renderer = renderer;\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(paginationConfig.main);\r\n    }\r\n  }\r\n\r\n  public configureOptions(config: any): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  public ngOnInit():void {\r\n    this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    // watch for maxSize\r\n    this.maxSize = typeof this.maxSize !== 'undefined'\r\n      ? this.maxSize\r\n      : this.config.maxSize;\r\n    this.rotate = typeof this.rotate !== 'undefined'\r\n      ? this.rotate\r\n      : this.config.rotate;\r\n    this.boundaryLinks = typeof this.boundaryLinks !== 'undefined'\r\n      ? this.boundaryLinks\r\n      : this.config.boundaryLinks;\r\n    this.directionLinks = typeof this.directionLinks !== 'undefined'\r\n      ? this.directionLinks\r\n      : this.config.directionLinks;\r\n    this.pageBtnClass = typeof this.pageBtnClass !== 'undefined'\r\n    ? this.pageBtnClass\r\n    : this.config.pageBtnClass;\r\n\r\n    // base class\r\n    this.itemsPerPage = typeof this.itemsPerPage !== 'undefined'\r\n      ? this.itemsPerPage\r\n      : this.config.itemsPerPage;\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  public writeValue(value:number):void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  public getText(key:string):string {\r\n    return (this as any)[key + 'Text'] || this.config[key + 'Text'];\r\n  }\r\n\r\n  public noPrevious():boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  public noNext():boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  public registerOnChange(fn:(_:any) => {}):void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn:() => {}):void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public selectPage(page:number, event?:Event):void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        let target:any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(num:number, text:string, active:boolean):{number:number, text:string, active:boolean} {\r\n    return { text, number:num, active };\r\n  }\r\n\r\n  protected getPages(currentPage:number, totalPages:number):any[] {\r\n    let pages:any[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    let isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage = ((Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize) + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      let page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        let previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        let nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages():number {\r\n    let totalPages = this.itemsPerPage < 1\r\n      ? 1\r\n      : Math.ceil(this.totalItems / this.itemsPerPage);\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'pagination',\r\n  template: PAGINATION_TEMPLATE,\r\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: PaginationConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n'maxSize': [{ type: Input },],\n'boundaryLinks': [{ type: Input },],\n'directionLinks': [{ type: Input },],\n'firstText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'nextText': [{ type: Input },],\n'lastText': [{ type: Input },],\n'rotate': [{ type: Input },],\n'pageBtnClass': [{ type: Input },],\n'disabled': [{ type: Input },],\n'numPages': [{ type: Output },],\n'pageChanged': [{ type: Output },],\n'itemsPerPage': [{ type: Input },],\n'totalItems': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}