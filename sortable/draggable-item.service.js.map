{"version":3,"sources":["../../src/sortable/draggable-item.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAAE,OAAA,EAAQ,MAAO,cAAA,CAAe;AAIvC;IAAA;QAGY,cAAS,GAA2B,IAAI,OAAO,EAAiB,CAAC;IAiC7E,CAAC;IA/BU,wCAAS,GAAhB,UAAiB,IAAmB;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEM,sCAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,0CAAW,GAAlB,UAAmB,aAAqB,EAAE,QAAgB;QACtD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAC9B,EAAE,EACF,IAAI,CAAC,aAAa,EAClB,EAAE,aAAa,eAAA,EAAE,CAAC,EAAE,QAAQ,EAAE,CACjC,CAAC;QACN,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,4CAAa,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAOL,2BAAC;AAAD,CApCA,AAoCC;;AANM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"draggable-item.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { DraggableItem } from './draggable-item';\r\n\r\n\r\nexport class DraggableItemService {\r\n    private draggableItem: DraggableItem;\r\n\r\n    private onCapture: Subject<DraggableItem> = new Subject<DraggableItem>();\r\n\r\n    public dragStart(item: DraggableItem): void {\r\n        this.draggableItem = item;\r\n    }\r\n\r\n    public getItem(): DraggableItem {\r\n        return this.draggableItem;\r\n    }\r\n\r\n    public captureItem(overZoneIndex: number, newIndex: number): DraggableItem {\r\n        if (this.draggableItem.overZoneIndex !== overZoneIndex) {\r\n            this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\r\n            this.draggableItem.overZoneIndex = overZoneIndex;\r\n            this.onCapture.next(this.draggableItem);\r\n            this.draggableItem = Object.assign(\r\n                {},\r\n                this.draggableItem,\r\n                { overZoneIndex, i: newIndex }\r\n            );\r\n        }\r\n        return this.draggableItem;\r\n    }\r\n\r\n    public onCaptureItem(): Observable<DraggableItem> {\r\n        return this.onCapture;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}