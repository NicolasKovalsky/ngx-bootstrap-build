{"version":3,"sources":["../../src/accordion/accordion-group.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,WAAA,EAAa,MAAA,EAAQ,KAAA,EACjC,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,KAAA,EAAM,MAAO,+BAAA,CAAgC;AACtD,OAAO,EAAE,kBAAA,EAAmB,MAAO,uBAAA,CAAwB;AAE3D;;;;;KAKK;AAGL;IA8BE,iCAAoB,SAA6B;QAC/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IApBD,sBAAW,2CAAM;QAJjB,wEAAwE;QACxE,wCAAwC;aAGxC;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAkB,KAAc;YAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;;;OAPA;IASD,sBAAW,0CAAK;aAAhB;YACE,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;;;OAAA;IASM,0CAAQ,GAAf;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,6CAAW,GAAlB;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,4CAAU,GAAjB,UAAkB,KAAY;QAC5B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7B,CAAC;IACH,CAAC;IAiCH,8BAAC;AAAD,CAhFA,AAgFC;;AAhCM,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,kCAAkC;gBAC5C,QAAQ,EAAE,spBAgBT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAG,EAAE,EAAG,EAAC;CACzF,EAF6F,CAE7F,CAAC;AACK,sCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC/E,CAAC","file":"accordion-group.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component, HostBinding, Inject, Input, OnDestroy, OnInit\r\n} from '@angular/core';\r\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\r\nimport { AccordionComponent } from './accordion.component';\r\n\r\n/*\r\n * ### Accordion heading\r\n\r\n Instead of using `heading` attribute on the `accordion-group`, you can use an `accordion-heading` attribute on `any` element inside of a group that will be used as group's header template.\r\n\r\n * */\r\n\r\n\r\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\r\n  /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\r\n   public heading: string;\r\n  /** Provides an ability to use Bootstrap's contextual panel classes (`panel-primary`, `panel-success`, `panel-info`, etc...). List of all available classes [available here](http://getbootstrap.com/components/#panels-alternatives) */\r\n   public panelClass: string;\r\n  /** if <code>true</code> â€” disables accordion group */\r\n   public isDisabled: boolean;\r\n\r\n  // Questionable, maybe .panel-open should be on child div.panel element?\r\n  /** Is accordion group open or closed */\r\n  \r\n  \r\n  public get isOpen(): boolean {\r\n    return this._isOpen;\r\n  }\r\n\r\n  public set isOpen(value: boolean) {\r\n    this._isOpen = value;\r\n    if (value) {\r\n      this.accordion.closeOtherPanels(this);\r\n    }\r\n  }\r\n\r\n  public get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  protected _isOpen: boolean;\r\n  protected accordion: AccordionComponent;\r\n\r\n  public constructor( accordion: AccordionComponent) {\r\n    this.accordion = accordion;\r\n  }\r\n\r\n  public ngOnInit(): any {\r\n    this.panelClass = this.panelClass || 'panel-default';\r\n    this.accordion.addGroup(this);\r\n  }\r\n\r\n  public ngOnDestroy(): any {\r\n    this.accordion.removeGroup(this);\r\n  }\r\n\r\n  public toggleOpen(event: Event): any {\r\n    if (!this.isDisabled) {\r\n      this.isOpen = !this.isOpen;\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'accordion-group, accordion-panel',\r\n  template: `\r\n<div class=\"panel card\" [ngClass]=\"panelClass\">\r\n  <div class=\"panel-heading card-header\" role=\"tab\" (click)=\"toggleOpen($event)\">\r\n    <div class=\"panel-title card-title\">\r\n      <div role=\"button\" class=\"accordion-toggle\" [attr.aria-expanded]=\"isOpen\">\r\n        <div *ngIf=\"heading\"[ngClass]=\"{'text-muted': isDisabled}\">{{heading}}</div>\r\n        <ng-content select=\"[accordion-heading]\"></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"panel-collapse collapse\" role=\"tabpanel\" [collapse]=\"!isOpen\">\r\n    <div class=\"panel-body card-block\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AccordionComponent, decorators: [{ type: Inject, args: [AccordionComponent, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'heading': [{ type: Input },],\n'panelClass': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: HostBinding, args: ['class.panel-open', ] },{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}