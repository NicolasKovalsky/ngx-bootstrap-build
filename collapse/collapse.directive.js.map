{"version":3,"sources":["../../src/collapse/collapse.directive.ts"],"names":[],"mappings":"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","file":"collapse.directive.js","sourceRoot":"","sourcesContent":["// todo: add animations when https://github.com/angular/angular/issues/9947 solved\r\nimport {\r\n  Directive, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output,\r\n  Renderer, style\r\n} from '@angular/core';\r\n\r\n\r\nexport class CollapseDirective {\r\n  /** This event fires as soon as content collapses */\r\n   public collapsed: EventEmitter<any> = new EventEmitter();\r\n  /** This event fires as soon as content becomes visible */\r\n   public expanded: EventEmitter<any> = new EventEmitter();\r\n\r\n  \r\n  public display: string;\r\n  // shown\r\n  \r\n  \r\n  \r\n  public isExpanded: boolean = true;\r\n  // hidden\r\n  \r\n  public isCollapsed: boolean = false;\r\n  // stale state\r\n  \r\n  public isCollapse: boolean = true;\r\n  // animation state\r\n  \r\n  public isCollapsing: boolean = false;\r\n\r\n  /** A flag indicating visibility of content (shown or hidden) */\r\n  \r\n  public set collapse(value: boolean) {\r\n    this.isExpanded = value;\r\n    this.toggle();\r\n  }\r\n\r\n  public get collapse(): boolean {\r\n    return this.isExpanded;\r\n  }\r\n\r\n  protected _el: ElementRef;\r\n  protected _renderer: Renderer;\r\n\r\n  public constructor(_el: ElementRef, _renderer: Renderer) {\r\n    this._el = _el;\r\n    this._renderer = _renderer;\r\n  }\r\n\r\n  /** allows to manually toggle content visibility */\r\n  public toggle(): void {\r\n    if (this.isExpanded) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  /** allows to manually hide content */\r\n  public hide(): void {\r\n    this.isCollapse = false;\r\n    this.isCollapsing = true;\r\n\r\n    this.isExpanded = false;\r\n    this.isCollapsed = true;\r\n\r\n    this.isCollapse = true;\r\n    this.isCollapsing = false;\r\n\r\n    this.display = 'none';\r\n    this.collapsed.emit(this);\r\n  }\r\n\r\n  /** allows to manually show collapsed content */\r\n  public show(): void {\r\n    this.isCollapse = false;\r\n    this.isCollapsing = true;\r\n\r\n    this.isExpanded = true;\r\n    this.isCollapsed = false;\r\n\r\n    this.display = 'block';\r\n    // this.height = 'auto';\r\n    this.isCollapse = true;\r\n    this.isCollapsing = false;\r\n    this._renderer.setElementStyle(this._el.nativeElement, 'overflow', 'visible');\r\n    this._renderer.setElementStyle(this._el.nativeElement, 'height', 'auto');\r\n    this.expanded.emit(this);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[collapse]',\r\n  exportAs: 'bs-collapse',\r\n  /* tslint:disable-next-line */\r\n  host: {'[class.collapse]': 'true'}/*,\r\n  animations: [\r\n    trigger('active', [\r\n      state('void', style({height: 0})),\r\n      state('closed', style({height: 0})),\r\n      state('open', style({height: '*'})),\r\n      transition('void => closed', [animate(0)]),\r\n      transition('closed => open', [animate('350ms ease-out')]),\r\n      transition('open => closed', [animate('350ms ease-out')])\r\n    ])\r\n  ]*/\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collapsed': [{ type: Output },],\n'expanded': [{ type: Output },],\n'display': [{ type: HostBinding, args: ['style.display', ] },],\n'isExpanded': [{ type: HostBinding, args: ['class.in', ] },{ type: HostBinding, args: ['class.show', ] },{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'isCollapsed': [{ type: HostBinding, args: ['attr.aria-hidden', ] },],\n'isCollapse': [{ type: HostBinding, args: ['class.collapse', ] },],\n'isCollapsing': [{ type: HostBinding, args: ['class.collapsing', ] },],\n'collapse': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}